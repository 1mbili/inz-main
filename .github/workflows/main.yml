---
name: CI
'on':
  push:
    branches:
      - main

jobs:
  Deploy-Infrastructure:
    name: Deploy
    runs-on: ubuntu-latest
    environment: PROD
    defaults:
      run:
        working-directory: ./terraform
    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v4

      - uses: hashicorp/setup-terraform@v2
        name: Setup Terraform
        with:
          terraform_version: "1.6.3"
    
      - name: Initialize Terraform
        run: terraform init
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          ARM_SAS_TOKEN: ${{ secrets.ARM_SAS_TOKEN }}

      - name: Run terraform apply
        run: terraform apply -auto-approve
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          ARM_SAS_TOKEN: ${{ secrets.ARM_SAS_TOKEN }}


      - uses: hashicorp/setup-terraform@v2
        name: Setup Terraform
        with:
          terraform_version: "1.6.3"
    
      - name: Initialize Terraform
        run: terraform init
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          ARM_SAS_TOKEN: ${{ secrets.ARM_SAS_TOKEN }}

      - name: Run terraform apply
        run: terraform apply -auto-approve
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          ARM_SAS_TOKEN: ${{ secrets.ARM_SAS_TOKEN }}

      - name: Set up Python 3.
        uses: actions/setup-python@v2
        with:
           python-version: '3.11'
      
      - name: Install Ansible.
        run: pip3 install ansible

      - name: Set up SSH agent
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Install required roles.
        run: ansible-galaxy install -r ../ansible/requirements.yml

      - name: Install azure collection dependencies
        run: pip3 install -r https://raw.githubusercontent.com/ansible-collections/azure/dev/requirements-azure.txt

      - name: Run Ansible Playbook
        run: ansible-playbook -i ../ansible/inventory.ini ../ansible/main.yml
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          KEY_VAULT_NAME: ${{ secrets.KEY_VAULT_NAME }}
